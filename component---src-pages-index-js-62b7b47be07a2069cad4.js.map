{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_4__","IndexPage","a","createElement","title","keywords","className","style","height","href","color","icon","faGithub","size","faLinkedin","faGoogle","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","react_default","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","siteTitle","Layout","gatsby_browser_entry","Fragment","header","_811989370","node"],"mappings":"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","file":"component---src-pages-index-js-62b7b47be07a2069cad4.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedin, faGoogle } from '@fortawesome/free-brands-svg-icons'\n\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`maurice`, `quach`, `website`]} />\n    <div className=\"d-flex flex-column text-center justify-content-center align-items-center pb-5\" style={{ height: '100%' }}>\n      <h1>Maurice Quach</h1>\n      <h2>PhD Candidate at L2S, CNRS, CentraleSupelec</h2>\n      <h3>Compression and Quality Assessment of Point Clouds</h3>\n      <div className=\"mt-2\">\n        <a href=\"https://github.com/mauriceqch\" style={{ color: 'black' }}>\n          <FontAwesomeIcon icon={faGithub} size=\"2x\" className=\"mr-2\" />\n        </a>\n        <a href=\"https://www.linkedin.com/in/maurice-quach\" style={{ color: '#0077B5' }}>\n          <FontAwesomeIcon icon={faLinkedin} size=\"2x\" className=\"mr-2\" />\n        </a>\n        <a href=\"https://scholar.google.fr/citations?user=atvnc2MAAAAJ&hl=fr\" style={{ color: '#0077B5' }}>\n          <FontAwesomeIcon icon={faGoogle} size=\"2x\" />\n        </a>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Navbar, Nav, Container } from 'react-bootstrap'\n\nconst Header = ({ author }) => (\n  <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n    <Container>\n      <Navbar.Brand as={Link} to=\"/\">{author}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/publications\">Publications</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/main.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            author\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header author={data.site.siteMetadata.author} />\n        <div id=\"layout-container\" className=\"container mt-4\">\n            {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}